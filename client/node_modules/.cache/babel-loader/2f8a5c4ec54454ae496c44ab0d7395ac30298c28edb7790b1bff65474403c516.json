{"ast":null,"code":"var _jsxFileName = \"C:\\\\PPIT\\\\ppit\\\\client\\\\src\\\\openAIRequest.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OpenAIRequest = () => {\n  _s();\n  const [userInput, setUserInput] = useState('');\n  const [conversation, setConversation] = useState([]);\n  const generateResponse = async () => {\n    if (!userInput.trim()) return; // Prevent empty queries\n    const userMessage = userInput.trim();\n    setUserInput(''); // Clear the input field\n    setConversation(conversation => [...conversation, {\n      sender: 'user',\n      text: userMessage\n    }]); // Add user message to conversation\n\n    try {\n      const response = await axios.post('https://api.openai.com/v1/engines/davinci-codex/completions', {\n        prompt: userMessage,\n        max_tokens: 100\n      }, {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${process.env.OPENAI_API_KEY}`\n        }\n      });\n      const botResponse = response.data.choices[0].text.trim();\n      setConversation(conversation => [...conversation, {\n        sender: 'bot',\n        text: botResponse\n      }]); // Add bot response to conversation\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-interface\",\n      children: conversation.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.sender}`,\n        children: msg.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: userInput,\n      onChange: e => setUserInput(e.target.value),\n      placeholder: \"Type your message here...\",\n      onKeyDown: e => e.key === 'Enter' && generateResponse()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: generateResponse,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(OpenAIRequest, \"9kGu4uXMau553TVJyYCNS5TqCQs=\");\n_c = OpenAIRequest;\nexport default OpenAIRequest;\nvar _c;\n$RefreshReg$(_c, \"OpenAIRequest\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","OpenAIRequest","_s","userInput","setUserInput","conversation","setConversation","generateResponse","trim","userMessage","sender","text","response","post","prompt","max_tokens","headers","process","env","OPENAI_API_KEY","botResponse","data","choices","error","console","children","className","map","msg","index","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","onKeyDown","key","onClick","_c","$RefreshReg$"],"sources":["C:/PPIT/ppit/client/src/openAIRequest.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst OpenAIRequest = () => {\r\n  const [userInput, setUserInput] = useState('');\r\n  const [conversation, setConversation] = useState([]);\r\n\r\n  const generateResponse = async () => {\r\n    if (!userInput.trim()) return; // Prevent empty queries\r\n    const userMessage = userInput.trim();\r\n    setUserInput(''); // Clear the input field\r\n    setConversation(conversation => [...conversation, { sender: 'user', text: userMessage }]); // Add user message to conversation\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        'https://api.openai.com/v1/engines/davinci-codex/completions',\r\n        {\r\n          prompt: userMessage,\r\n          max_tokens: 100,\r\n        },\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': `Bearer ${process.env.OPENAI_API_KEY}`,\r\n          },\r\n        }\r\n      );\r\n\r\n      const botResponse = response.data.choices[0].text.trim();\r\n      setConversation(conversation => [...conversation, { sender: 'bot', text: botResponse }]); // Add bot response to conversation\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"chat-interface\">\r\n        {conversation.map((msg, index) => (\r\n          <div key={index} className={`message ${msg.sender}`}>\r\n            {msg.text}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <input\r\n        value={userInput}\r\n        onChange={e => setUserInput(e.target.value)}\r\n        placeholder=\"Type your message here...\"\r\n        onKeyDown={e => e.key === 'Enter' && generateResponse()}\r\n      />\r\n      <button onClick={generateResponse}>Send</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OpenAIRequest;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}